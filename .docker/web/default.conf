server_tokens off;

# The upstream component nginx needs to connect to.
upstream django {
  ip_hash;
  server app:8001;
}

server {
  listen      80;
  charset     utf-8;
  server_name DOMAIN;
  return 301  https://$host$request_uri;
}

server {
  listen      443 ssl;
  charset     utf-8;
  server_name DOMAIN;

  ssl_protocols        TLSv1 TLSv1.1 TLSv1.2;
  ssl_certificate      /.credentials/CREDENTIAL.crt;
  ssl_certificate_key  /.credentials/CREDENTIAL.key;

  access_log /var/log/nginx/access.log;
  error_log  /var/log/nginx/error.log;

  client_max_body_size 100M;

  # proxy_set_header Origin $http_origin;
  proxy_set_header Origin $scheme://$host;
  proxy_set_header Host $http_host;
  proxy_set_header X-CSRF-Token $http_x_csrf_token;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;
  proxy_request_buffering off;
  proxy_redirect off;

  location /static {
    alias /static;

    # this rewrites all the requests to the maintenance.html
    # page if it exists in the doc root. This is for capistrano's
    # disable web task
    if (-f $document_root/maintenance.html) {
      rewrite  ^(.*)$  /maintenance.html last;
      break;
    }

    # If the file exists as a static file serve it directly without
    # running all the other rewrite tests on it
    if (-f $request_filename) {
      break;
    }

    # check for index.html for directory index
    # if it's there on the filesystem then rewrite
    # the url to add /index.html to the end of it
    # and then break to send it to the next config rules.
    if (-f $request_filename/index.html) {
      rewrite (.*) $1/index.html break;
    }

    # this is the meat of the rack page caching config
    # it adds .html to the end of the url and then checks
    # the filesystem for that file. If it exists, then we
    # rewrite the url to have explicit .html on the end
    # and then send it on its way to the next config rule.
    # if there is no file on the fs then it sets all the
    # necessary headers and proxies to our upstream pumas
    if (-f $request_filename.html) {
      rewrite (.*) $1.html break;
    }
  }

  # Finally, send all non-media requests to the Django server.
  location / {
    uwsgi_pass  django;
    include     /etc/nginx/uwsgi_params;  # the uwsgi_params file you installed
  }
}
